name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify installations
      run: |
        python -c "import black; print('black installed')"
        python -c "import flake8; print('flake8 installed')"
        python -c "import coverage; print('coverage installed')"
    
    - name: Run tests
      run: |
        python manage.py test
    
    - name: Check code formatting with black
      run: |
        python -m black --check .
    
    - name: Run flake8 linter
      run: |
        python -m flake8 .
    
    - name: Run coverage analysis
      run: |
        python -m coverage run --source='.' manage.py test
        python -m coverage report
    
    # - name: Upload coverage to Coveralls
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     flag-name: run-${{ github.run_number }}
    #     parallel: true
    #     fail_ci_if_error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: swe1-app
        environment_name: swe1-env2
        region: us-east-1
        version_label: ${{ github.sha }}
        deployment_package: .
